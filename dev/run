#!/bin/bash
echo "::: Container Started"
apt-get update > /dev/null 2>/dev/null
apt-get install -y -f --no-install-recommends apt-transport-https whiptail dnsutils procps grep dhcpcd5 > /dev/null 2>/dev/null
pivpnFilesDir="/usr/local/src/pivpn"
pivpnScriptDir="/opt/pivpn"
script(){
   cp "/etc/pivpn/${VPN}/setupVars.conf" " /etc/${VPN}/setupVars.conf" 2> /dev/null || true
   mkdir -p "/etc/pivpn/${VPN}" > /dev/null || true
   ln -sf -T "/etc/${VPN}/setupVars.conf" "/etc/pivpn/${VPN}/setupVars.conf"
   ln -sf -T "${pivpnFilesDir}/scripts/${VPN}/bash-completion" /etc/bash_completion.d/pivpn
   ln -sf -T "${pivpnFilesDir}/scripts/${VPN}/pivpn.sh" /usr/local/bin/pivpn
   ln -sf "${pivpnFilesDir}/scripts/" "${pivpnScriptDir}"
}
if [ -f /etc/openvpn/server.conf ]
then
   echo "::: Openvpn VPN Server exists"
   echo "::: If you have changed Variables in a running PIVPN Install run reconf"
   VPN=openvpn
   echo "::: Prepareing Openvpn"
   if ! [[ `dpkg -l | grep 'openvpn\|grepcidr\|expect\|gnupg'` ]]; then
   (apt-get update && apt install -y --no-install-recommends gnupg openvpn grepcidr expect) > /dev/null 2>/dev/null; fi
   script
   (pivpn -a -n ${CLIENT_NAME:=pivpn} nopass -d 1080 > /dev/null) || true
   echo "::: Starting Openvpn"
   #sudo iptables -P FORWARD ACCEPT
   sudo iptables --table nat -A POSTROUTING -o "${INTERFACE:=eth0}" -j MASQUERADE
   #systemctl enable openvpn
   groupadd openvpn 2> /dev/null   
   useradd -g openvpn openvpn 2> /dev/null   
   echo "::: PiVPN Service Started"
   openvpn --config /etc/openvpn/server.conf --log /etc/openvpn/openvpn.log
elif [ -f /etc/wireguard/wg0.conf ]
then
   echo "::: Wireguard VPN Server exists"
   echo "::: If you have changed Variables in a running PIVPN Install run reconf"
   VPN=wireguard
   echo "::: Prepareing Wireguard"
   if ! [[ `dpkg -l | grep 'wireguard-tools\|qrencode'` ]]; then
   (echo "deb http://deb.debian.org/debian buster-backports main non-free" >> /etc/apt/sources.list) > /dev/null 2>/dev/null
   (apt-get update && apt install -y --no-install-recommends wireguard-tools qrencode) > /dev/null 2>/dev/null; fi
   script
   pivpn -a -n ${CLIENT_NAME:=pivpn} > /dev/null || true
   echo "::: Starting Wireguard"
   # sudo iptables -P FORWARD ACCEPT
   sudo iptables --table nat -A POSTROUTING -o "${INTERFACE:=eth0}" -j MASQUERADE
   # sudo iptables -t nat -C POSTROUTING -s "10.8.0.0/24" -o "eth0" -j MASQUERADE
   # systemctl enable wg-quick@wg0.service
   # systemctl start wg-quick@wg0.service
   # sleep 2
   wg-quick up wg0
   while :;do sleep 3; done
else
   echo "::: VPN Server does not exist."
   echo "::: Pre Config of PIVPN."
   mkdir -p /etc/pivpn
   sudo -E bash setupVars
   INSTALLER=/etc/pivpn/install.sh
   mkdir -p /usr/local/src/pivpn/
   echo "deb http://deb.debian.org/debian buster-backports main non-free" >> /etc/apt/sources.list
   apt-get update && apt install -y --no-install-recommends wireguard-tools qrencode iproute2
   PLAT=Ubuntu
    curl -fsSL0 https://install.pivpn.io -o "${INSTALLER}" \
    && sed -i 's/debconf-apt-progress --//g' "${INSTALLER}" \
    && sed -i '/setStaticIPv4 #/d' "${INSTALLER}" \
    && sed -i 's/WIREGUARD_SUPPORT=0/WIREGUARD_SUPPORT=1/g' "${INSTALLER}" \
    && sed -i 's/PIVPN_DEPS+=(linux-headers-amd64 wireguard-dkms)/sleep 1/g' "${INSTALLER}" \
    && sed -i 's/PIVPN_DEPS+=(linux-headers-generic wireguard-dkms)/sleep 1/g' "${INSTALLER}" \
    && sed -i 's/sync/# sync/g' "${INSTALLER}" \
    && chmod +x "${INSTALLER}" \
    && bash "${INSTALLER}" --unattended /etc/pivpn/setupVars.conf --reconfigure
   
   echo "::: Installation Complete!"
   echo "::: PiVPN Service Started"
   if [ -f /etc/wireguard/wg0.conf ]
   then
      VPN=wireguard
      script
      sudo iptables --table nat -A POSTROUTING -o "${INTERFACE:=eth0}" -j MASQUERADE
      wg-quick up wg0
      (pivpn -a -n ${CLIENT_NAME:=pivpn} > /dev/null) || true
      wg syncconf wg0 <(wg-quick strip wg0)
      while :;do sleep 3; done
   elif [ -f /etc/openvpn/server.conf ]
   then
      VPN=openvpn
      script
      #systemctl enable openvpn > /dev/null
      (pivpn -a nopass -n ${CLIENT_NAME:=pivpn} -d 1080 > /dev/null) || true
      sleep 1
      openvpn --config /etc/openvpn/server.conf --log /etc/openvpn/openvpn.log
   fi
fi   
